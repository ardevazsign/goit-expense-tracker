{"version":3,"file":"static/js/765.c19b8959.chunk.js","mappings":"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","sources":["../node_modules/css-mediaquery/index.js","../node_modules/matchmediaquery/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/randomcolor/randomColor.js","../node_modules/hyphenate-style-name/index.js","../node_modules/shallow-equal/src/objects.ts","../node_modules/react-responsive/src/mediaQuery.ts","../node_modules/react-responsive/src/toQuery.ts","../node_modules/react-responsive/src/Context.ts","../node_modules/react-responsive/src/useMediaQuery.ts","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n'use strict';\n\nexports.match = matchQuery;\nexports.parse = parseQuery;\n\n// -----------------------------------------------------------------------------\n\nvar RE_MEDIA_QUERY     = /(?:(only|not)?\\s*([^\\s\\(\\)]+)(?:\\s*and)?\\s*)?(.+)?/i,\n    RE_MQ_EXPRESSION   = /\\(\\s*([^\\s\\:\\)]+)\\s*(?:\\:\\s*([^\\s\\)]+))?\\s*\\)/,\n    RE_MQ_FEATURE      = /^(?:(min|max)-)?(.+)/,\n    RE_LENGTH_UNIT     = /(em|rem|px|cm|mm|in|pt|pc)?$/,\n    RE_RESOLUTION_UNIT = /(dpi|dpcm|dppx)?$/;\n\nfunction matchQuery(mediaQuery, values) {\n    return parseQuery(mediaQuery).some(function (query) {\n        var inverse = query.inverse;\n\n        // Either the parsed or specified `type` is \"all\", or the types must be\n        // equal for a match.\n        var typeMatch = query.type === 'all' || values.type === query.type;\n\n        // Quit early when `type` doesn't match, but take \"not\" into account.\n        if ((typeMatch && inverse) || !(typeMatch || inverse)) {\n            return false;\n        }\n\n        var expressionsMatch = query.expressions.every(function (expression) {\n            var feature  = expression.feature,\n                modifier = expression.modifier,\n                expValue = expression.value,\n                value    = values[feature];\n\n            // Missing or falsy values don't match.\n            if (!value) { return false; }\n\n            switch (feature) {\n                case 'orientation':\n                case 'scan':\n                    return value.toLowerCase() === expValue.toLowerCase();\n\n                case 'width':\n                case 'height':\n                case 'device-width':\n                case 'device-height':\n                    expValue = toPx(expValue);\n                    value    = toPx(value);\n                    break;\n\n                case 'resolution':\n                    expValue = toDpi(expValue);\n                    value    = toDpi(value);\n                    break;\n\n                case 'aspect-ratio':\n                case 'device-aspect-ratio':\n                case /* Deprecated */ 'device-pixel-ratio':\n                    expValue = toDecimal(expValue);\n                    value    = toDecimal(value);\n                    break;\n\n                case 'grid':\n                case 'color':\n                case 'color-index':\n                case 'monochrome':\n                    expValue = parseInt(expValue, 10) || 1;\n                    value    = parseInt(value, 10) || 0;\n                    break;\n            }\n\n            switch (modifier) {\n                case 'min': return value >= expValue;\n                case 'max': return value <= expValue;\n                default   : return value === expValue;\n            }\n        });\n\n        return (expressionsMatch && !inverse) || (!expressionsMatch && inverse);\n    });\n}\n\nfunction parseQuery(mediaQuery) {\n    return mediaQuery.split(',').map(function (query) {\n        query = query.trim();\n\n        var captures    = query.match(RE_MEDIA_QUERY),\n            modifier    = captures[1],\n            type        = captures[2],\n            expressions = captures[3] || '',\n            parsed      = {};\n\n        parsed.inverse = !!modifier && modifier.toLowerCase() === 'not';\n        parsed.type    = type ? type.toLowerCase() : 'all';\n\n        // Split expressions into a list.\n        expressions = expressions.match(/\\([^\\)]+\\)/g) || [];\n\n        parsed.expressions = expressions.map(function (expression) {\n            var captures = expression.match(RE_MQ_EXPRESSION),\n                feature  = captures[1].toLowerCase().match(RE_MQ_FEATURE);\n\n            return {\n                modifier: feature[1],\n                feature : feature[2],\n                value   : captures[2]\n            };\n        });\n\n        return parsed;\n    });\n}\n\n// -- Utilities ----------------------------------------------------------------\n\nfunction toDecimal(ratio) {\n    var decimal = Number(ratio),\n        numbers;\n\n    if (!decimal) {\n        numbers = ratio.match(/^(\\d+)\\s*\\/\\s*(\\d+)$/);\n        decimal = numbers[1] / numbers[2];\n    }\n\n    return decimal;\n}\n\nfunction toDpi(resolution) {\n    var value = parseFloat(resolution),\n        units = String(resolution).match(RE_RESOLUTION_UNIT)[1];\n\n    switch (units) {\n        case 'dpcm': return value / 2.54;\n        case 'dppx': return value * 96;\n        default    : return value;\n    }\n}\n\nfunction toPx(length) {\n    var value = parseFloat(length),\n        units = String(length).match(RE_LENGTH_UNIT)[1];\n\n    switch (units) {\n        case 'em' : return value * 16;\n        case 'rem': return value * 16;\n        case 'cm' : return value * 96 / 2.54;\n        case 'mm' : return value * 96 / 2.54 / 10;\n        case 'in' : return value * 96;\n        case 'pt' : return value * 72;\n        case 'pc' : return value * 72 / 12;\n        default   : return value;\n    }\n}\n","'use strict';\n\nvar staticMatch = require('css-mediaquery').match;\nvar dynamicMatch = typeof window !== 'undefined' ? window.matchMedia : null;\n\n// our fake MediaQueryList\nfunction Mql(query, values, forceStatic){\n  var self = this;\n  var mql;\n\n  // matchMedia will return null in FF when it's called in a hidden iframe\n  // ref: https://stackoverflow.com/a/12330568\n  if(dynamicMatch && !forceStatic) mql = dynamicMatch.call(window, query);\n\n  if (mql) {\n    this.matches = mql.matches;\n    this.media = mql.media;\n    // TODO: is there a time it makes sense to remove this listener?\n    mql.addListener(update);\n  } else {\n    this.matches = staticMatch(query, values);\n    this.media = query;\n  }\n\n  this.addListener = addListener;\n  this.removeListener = removeListener;\n  this.dispose = dispose;\n\n  function addListener(listener){\n    if(mql){\n      mql.addListener(listener);\n    }\n  }\n\n  function removeListener(listener){\n    if(mql){\n      mql.removeListener(listener);\n    }\n  }\n\n  // update ourselves!\n  function update(evt){\n    self.matches = evt.matches;\n    self.media = evt.media;\n  }\n\n  function dispose(){\n    if(mql){\n      mql.removeListener(update);\n    }\n  }\n}\n\nfunction matchMedia(query, values, forceStatic){\n  return new Mql(query, values, forceStatic);\n}\n\nmodule.exports = matchMedia;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  // check if a range is taken\n  var colorRanges = [];\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n      // Value false at index i means the range i is not taken yet.\n      for (var i = 0; i < options.count; i++) {\n        colorRanges.push(false)\n        }\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        var color = randomColor(options);\n\n        if (seed !== null) {\n          options.seed = seed;\n        }\n\n        colors.push(color);\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue(options) {\n    if (colorRanges.length > 0) {\n      var hueRange = getRealHueRange(options.hue)\n\n      var hue = randomWithin(hueRange)\n\n      //Each of colorRanges.length ranges has a length equal approximatelly one step\n      var step = (hueRange[1] - hueRange[0]) / colorRanges.length\n\n      var j = parseInt((hue - hueRange[0]) / step)\n\n      //Check if the range j is taken\n      if (colorRanges[j] === true) {\n        j = (j + 2) % colorRanges.length\n      }\n      else {\n        colorRanges[j] = true\n           }\n\n      var min = (hueRange[0] + j * step) % 359,\n          max = (hueRange[0] + (j + 1) * step) % 359;\n\n      hueRange = [min, max]\n\n      hue = randomWithin(hueRange)\n\n      if (hue < 0) {hue = 360 + hue;}\n      return hue\n    }\n    else {\n      var hueRange = getHueRange(options.hue)\n\n      hue = randomWithin(hueRange);\n      // Instead of storing red as two seperate ranges,\n      // we group them, using negative numbers\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n\n      return hue;\n    }\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [ hue, hue ];\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      //generate random evenly destinct number from : https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n      var golden_ratio = 0.618033988749895\n      var r=Math.random()\n      r += golden_ratio\n      r %= 1\n      return Math.floor(range[0] + r*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n}\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [18,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [46,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [62,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [178, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [257, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [282, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HexToHSB (hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n          green = parseInt(hex.substr(2, 2), 16) / 255,\n          blue = parseInt(hex.substr(4, 2), 16) / 255;\n\n    var cMax = Math.max(red, green, blue),\n          delta = cMax - Math.min(red, green, blue),\n          saturation = cMax ? (delta / cMax) : 0;\n\n    switch (cMax) {\n      case red: return [ 60 * (((green - blue) / delta) % 6) || 0, saturation, cMax ];\n      case green: return [ 60 * (((blue - red) / delta) + 2) || 0, saturation, cMax ];\n      case blue: return [ 60 * (((red - green) / delta) + 4) || 0, saturation, cMax ];\n    }\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  // get The range of given hue when options.count!=0\n  function getRealHueRange(colorHue)\n  { if (!isNaN(colorHue)) {\n    var number = parseInt(colorHue);\n\n    if (number < 360 && number > 0) {\n      return getColorInfo(colorHue).hueRange\n    }\n  }\n    else if (typeof colorHue === 'string') {\n\n      if (colorDictionary[colorHue]) {\n        var color = colorDictionary[colorHue];\n\n        if (color.hueRange) {\n          return color.hueRange\n       }\n    } else if (colorHue.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorHue)[0]\n        return getColorInfo(hue).hueRange\n    }\n  }\n\n    return [0,360]\n}\n  return randomColor;\n}));\n","/* eslint-disable no-var, prefer-template */\nvar uppercasePattern = /[A-Z]/g\nvar msPattern = /^ms-/\nvar cache = {}\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase()\n}\n\nfunction hyphenateStyleName(name) {\n  if (cache.hasOwnProperty(name)) {\n    return cache[name]\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower)\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)\n}\n\nexport default hyphenateStyleName\n","export type validObjectValue = Record<string, any> | null | undefined;\n\nexport default function shallowEqualObjects<T>(\n  objA: validObjectValue,\n  objB: validObjectValue\n): boolean {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  const aKeys = Object.keys(objA);\n  const bKeys = Object.keys(objB);\n  const len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (let i = 0; i < len; i++) {\n    const key = aKeys[i];\n\n    if (\n      objA[key] !== objB[key] ||\n      !Object.prototype.hasOwnProperty.call(objB, key)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import PropTypes from 'prop-types'\n\nconst stringOrNumber = PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\n// media types\nconst types = {\n  all: PropTypes.bool,\n  grid: PropTypes.bool,\n  aural: PropTypes.bool,\n  braille: PropTypes.bool,\n  handheld: PropTypes.bool,\n  print: PropTypes.bool,\n  projection: PropTypes.bool,\n  screen: PropTypes.bool,\n  tty: PropTypes.bool,\n  tv: PropTypes.bool,\n  embossed: PropTypes.bool\n}\n\n// properties that match media queries\nconst matchers = {\n  orientation: PropTypes.oneOf(['portrait', 'landscape']),\n\n  scan: PropTypes.oneOf(['progressive', 'interlace']),\n\n  aspectRatio: PropTypes.string,\n  deviceAspectRatio: PropTypes.string,\n\n  height: stringOrNumber,\n  deviceHeight: stringOrNumber,\n\n  width: stringOrNumber,\n  deviceWidth: stringOrNumber,\n\n  color: PropTypes.bool,\n\n  colorIndex: PropTypes.bool,\n\n  monochrome: PropTypes.bool,\n  resolution: stringOrNumber,\n  type: Object.keys(types)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst { type, ...featureMatchers } = matchers\n\n// media features\nconst features = {\n  minAspectRatio: PropTypes.string,\n  maxAspectRatio: PropTypes.string,\n  minDeviceAspectRatio: PropTypes.string,\n  maxDeviceAspectRatio: PropTypes.string,\n\n  minHeight: stringOrNumber,\n  maxHeight: stringOrNumber,\n  minDeviceHeight: stringOrNumber,\n  maxDeviceHeight: stringOrNumber,\n\n  minWidth: stringOrNumber,\n  maxWidth: stringOrNumber,\n  minDeviceWidth: stringOrNumber,\n  maxDeviceWidth: stringOrNumber,\n\n  minColor: PropTypes.number,\n  maxColor: PropTypes.number,\n\n  minColorIndex: PropTypes.number,\n  maxColorIndex: PropTypes.number,\n\n  minMonochrome: PropTypes.number,\n  maxMonochrome: PropTypes.number,\n\n  minResolution: stringOrNumber,\n  maxResolution: stringOrNumber,\n\n  ...featureMatchers\n}\n\nconst all = { ...types, ...features }\n\nexport default {\n  all: all,\n  types: types,\n  matchers: matchers,\n  features: features\n}\n","import hyphenate from 'hyphenate-style-name'\nimport mq from './mediaQuery'\nimport { MediaQueryAllQueryable } from './types'\n\nconst negate = (cond: string) => `not ${cond}`\n\nconst keyVal = (k: string, v: unknown): string => {\n  const realKey = hyphenate(k)\n\n  // px shorthand\n  if (typeof v === 'number') {\n    v = `${v}px`\n  }\n  if (v === true) {\n    return realKey\n  }\n  if (v === false) {\n    return negate(realKey)\n  }\n  return `(${realKey}: ${v})`\n}\n\nconst join = (conds: string[]): string => conds.join(' and ')\n\nconst toQuery = (obj: Partial<MediaQueryAllQueryable>): string => {\n  const rules: string[] = []\n  Object.keys(mq.all).forEach((k) => {\n    const v = obj[k as keyof MediaQueryAllQueryable]\n    if (v != null) {\n      rules.push(keyVal(k, v))\n    }\n  })\n  return join(rules)\n}\n\nexport default toQuery\n","import { createContext } from 'react'\nimport { MediaQueryAllQueryable } from './types'\n\nconst Context = createContext<Partial<MediaQueryAllQueryable> | undefined>(\n  undefined\n)\n\nexport default Context\n","import { useRef, useEffect, useContext, useState } from 'react'\nimport matchMedia from 'matchmediaquery'\nimport hyphenate from 'hyphenate-style-name'\nimport { shallowEqualObjects } from 'shallow-equal'\nimport toQuery from './toQuery'\nimport Context from './Context'\nimport { MediaQueryAllQueryable, MediaQueryMatchers } from './types'\n\ntype MediaQuerySettings = Partial<MediaQueryAllQueryable & { query?: string }>\ntype HyphenateKeyTypes = MediaQueryMatchers | MediaQueryAllQueryable\n\nconst makeQuery = (settings: MediaQuerySettings) =>\n  settings.query || toQuery(settings)\n\nconst hyphenateKeys = (obj?: HyphenateKeyTypes) => {\n  type K = keyof HyphenateKeyTypes\n\n  if (!obj) return undefined\n  const keys = Object.keys(obj) as K[]\n\n  return keys.reduce(\n    (result, key) => {\n      result[hyphenate(key)] = obj[key]\n      return result\n    },\n    {} as Record<string, (typeof obj)[K]>\n  )\n}\n\nconst useIsUpdate = () => {\n  const ref = useRef(false)\n\n  useEffect(() => {\n    ref.current = true\n  }, [])\n\n  return ref.current\n}\n\nconst useDevice = (\n  deviceFromProps?: MediaQueryMatchers\n): Partial<MediaQueryAllQueryable> | undefined => {\n  const deviceFromContext = useContext(Context)\n  const getDevice = () =>\n    hyphenateKeys(deviceFromProps) || hyphenateKeys(deviceFromContext)\n  const [device, setDevice] = useState(getDevice)\n\n  useEffect(() => {\n    const newDevice = getDevice()\n    if (!shallowEqualObjects(device, newDevice)) {\n      setDevice(newDevice)\n    }\n  }, [deviceFromProps, deviceFromContext])\n\n  return device\n}\n\nconst useQuery = (settings: MediaQuerySettings) => {\n  const getQuery = () => makeQuery(settings)\n  const [query, setQuery] = useState(getQuery)\n\n  useEffect(() => {\n    const newQuery = getQuery()\n    if (query !== newQuery) {\n      setQuery(newQuery)\n    }\n  }, [settings])\n\n  return query\n}\n\nconst useMatchMedia = (query: string, device?: MediaQueryMatchers) => {\n  const getMatchMedia = () => matchMedia(query, device || {}, !!device)\n  const [mq, setMq] = useState(getMatchMedia)\n  const isUpdate = useIsUpdate()\n\n  useEffect(() => {\n    if (isUpdate) {\n      // skip on mounting, it has already been set\n      const newMq = getMatchMedia()\n      setMq(newMq)\n\n      return () => {\n        if (newMq) {\n          newMq.dispose()\n        }\n      }\n    }\n  }, [query, device])\n\n  return mq\n}\n\nconst useMatches = (mediaQuery: MediaQueryList): boolean => {\n  const [matches, setMatches] = useState<boolean>(mediaQuery.matches)\n\n  useEffect(() => {\n    const updateMatches = (ev: MediaQueryListEvent) => {\n      setMatches(ev.matches)\n    }\n    mediaQuery.addListener(updateMatches)\n    setMatches(mediaQuery.matches)\n\n    return () => {\n      mediaQuery.removeListener(updateMatches)\n    }\n  }, [mediaQuery])\n\n  return matches\n}\n\nconst useMediaQuery = (\n  settings: MediaQuerySettings,\n  device?: MediaQueryMatchers,\n  onChange?: (_: boolean) => void\n) => {\n  const deviceSettings = useDevice(device)\n  const query = useQuery(settings)\n  if (!query) throw new Error('Invalid or missing MediaQuery!')\n  const mq = useMatchMedia(query, deviceSettings)\n  const matches = useMatches(mq as unknown as MediaQueryList)\n  const isUpdate = useIsUpdate()\n\n  useEffect(() => {\n    if (isUpdate && onChange) {\n      onChange(matches)\n    }\n  }, [matches])\n\n  useEffect(\n    () => () => {\n      if (mq) {\n        mq.dispose()\n      }\n    },\n    []\n  )\n\n  return matches\n}\n\nexport default useMediaQuery\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["exports","mediaQuery","values","parseQuery","some","query","inverse","typeMatch","type","expressionsMatch","expressions","every","expression","feature","modifier","expValue","value","toLowerCase","toPx","toDpi","toDecimal","parseInt","RE_MEDIA_QUERY","RE_MQ_EXPRESSION","RE_MQ_FEATURE","RE_LENGTH_UNIT","RE_RESOLUTION_UNIT","split","map","captures","trim","match","parsed","ratio","numbers","decimal","Number","resolution","parseFloat","String","length","staticMatch","require","dynamicMatch","window","matchMedia","Mql","forceStatic","mql","self","this","update","evt","matches","media","call","addListener","listener","removeListener","dispose","module","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","randomColor","seed","colorDictionary","loadColorBounds","colorRanges","options","undefined","stringToInteger","TypeError","H","S","count","totalColors","colors","i","push","color","setFormat","pickHue","pickSaturation","pickBrightness","hue","randomWithin","hueRange","getRealHueRange","step","j","getHueRange","luminosity","saturationRange","getSaturationRange","sMin","sMax","bMin","getMinimumBrightness","bMax","hsv","format","HSVtoHSL","hsl","hslColor","alpha","Math","random","HSVtoRGB","join","rgbColor","HSVtoHex","lowerBounds","getColorInfo","s1","v1","s2","v2","m","colorInput","HexToHSB","colorName","range","golden_ratio","r","floor","max","min","rnd","rgb","componentToHex","c","hex","toString","defineColor","brightnessRange","h","s","v","h_i","f","p","q","t","g","b","replace","red","substr","green","blue","cMax","delta","saturation","k","round","total","MAX_SAFE_INTEGER","charCodeAt","colorHue","isNaN","factory","uppercasePattern","msPattern","cache","toHyphenLower","hasOwnProperty","hName","test","shallowEqualObjects","objA","objB","aKeys","Object","keys","bKeys","len","key","prototype","stringOrNumber","types","all","grid","aural","braille","handheld","print","projection","screen","tty","tv","embossed","matchers","orientation","scan","aspectRatio","deviceAspectRatio","height","deviceHeight","width","deviceWidth","colorIndex","monochrome","featureMatchers","features","minAspectRatio","maxAspectRatio","minDeviceAspectRatio","maxDeviceAspectRatio","minHeight","maxHeight","minDeviceHeight","maxDeviceHeight","minWidth","maxWidth","minDeviceWidth","maxDeviceWidth","minColor","maxColor","minColorIndex","maxColorIndex","minMonochrome","maxMonochrome","minResolution","maxResolution","toQuery","obj","rules","mq","forEach","keyVal","realKey","hyphenate","Context","createContext","hyphenateKeys","reduce","result","useIsUpdate","ref","useRef","useEffect","current","useQuery","settings","getQuery","makeQuery","setQuery","useState","newQuery","useMediaQuery","device","onChange","deviceSettings","deviceFromProps","deviceFromContext","useContext","getDevice","setDevice","newDevice","useDevice","useMatchMedia","getMatchMedia","setMq","isUpdate","newMq","setMatches","updateMatches","ev","useMatches","lim","l","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","d","e","h1","h2","eq","hexString","isShort","HUE_RE","hsl2rgbn","n","arguments","hsv2rgbn","hwb2rgbn","w","rgb2hsl","hueValue","calln","Array","isArray","hsl2rgb","hueParse","str","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","R","Q","P","O","N","M","L","K","G","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","ok","nk","unpack","transparent","RGB_RE","to","pow","from","modHSL","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","ret","hexParse","_rgb","_valid","valid","rgbString","hslString","mix","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","slice","isObject","isNumberFinite","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","datasetIndex","index","source","target","create","klen","isValidKey","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","keyResolvers","o","y","resolveObjectKey","resolver","parts","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","fraction","isNumber","_setMinAndMaxByKey","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","stub","_chartjs","listeners","splice","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","set","getNumberFormat","formatters","numeric","tickValue","ticks","chart","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","overrides","descriptors","getScope","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","_scriptable","startsWith","_indexable","_fallback","defaults","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","Set","setContext","receiver","isScriptable","getValue","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","margins","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","items","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","helpersColor","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","sort","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","next","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","getPixelForValue","getValueForPixel","getPixelForDecimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineCap","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","previous","sameItem","itemsEqual","_element","_args","afterEvent","ci","useBorderRadius","borderCapStyle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","generateTicks","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","defaultDatasetIdKey","reforwardRef","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","chartRef","renderChart","ChartJS","destroyChart","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Doughnut"],"sourceRoot":""}